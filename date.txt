/**
 * 根据输入模式显示不同的WdatePicker输入模式
 */
rh.ui.Date.prototype.setDatePicker = function(config) {
	var _self = this;
	var configArray = [];
	if (!config) {// 如果config没传则为默认输入模式
		configArray[0] = "DATE";
	} else {
		configArray = config.split(",");
		if (configArray.length === 0) {
			configArray[0] = "DATE";
		}
	}

	var dateType = configArray[0];
	switch (dateType) {
		case "DATETIME" :
            WdatePicker({
                startDate: '%y-%MM-%dd %H:%m:%ss',
                dateFmt: 'yyyy-MM-dd HH:mm:ss',
                alwaysUseStartDate: false,
                onpicked: function () {
                    _self.onchange();
                }
            });
			break;
		case "DATETIMEH" :
            WdatePicker({
                startDate: '%y-%MM-%dd %H',
                dateFmt: 'yyyy-MM-dd HH',
                alwaysUseStartDate: true,
                onpicked: function () {
                    _self.onchange();
                }
            });
			break;
		case "DATETIMEHM" :
            WdatePicker({
                startDate: '%yyyy-%MM-%dd %HH:%mm',
                dateFmt: 'yyyy-MM-dd HH:mm',
                alwaysUseStartDate: true,
                onpicked: function () {
                    _self.onchange();
                }
            });
			break;
		case "YEAR" :
			WdatePicker({
                startDate: '%yyyy',
				dateFmt: 'yyyy',
				onpicked: function () {
                    _self.onchange();
                }
            });
			break;
		case "MONTH" :
            WdatePicker({
                startDate: '%yyyy-%MM',
				dateFmt: 'yyyy-MM',
				alwaysUseStartDate: true,
				onpicked: function () {
                    _self.onchange();
                }
            });
			break;
		case "CUSTOM" :
            WdatePicker({
                startDate:configArray[2],
                dateFmt:configArray[3],
				alwaysUseStartDate:configArray[4],
                onpicked: function () {
                    _self.onchange();
                }
			});
			break;
		case "TIME" :
            WdatePicker({
                startDate: '',
				dateFmt: 'H:mm',
				alwaysUseStartDate: true,
				onpicked: function () {
                    _self.onchange();
                }
            });
			break;
		default :
			try {
                var json = Tools.systemVarReplace(config);
                if (_self._opts && _self._opts.cardObj) {
                    json = Tools.itemVarReplace2(json, _self._opts.cardObj);
                }
                json = $.parseJSON(json);
				if ($.isPlainObject(json)) {
                    WdatePicker($.extend({}, {
                        onpicked: function () {
                            _self.onchange();
                        }
                    }, json));
				} else {
                    WdatePicker({
                        onpicked: function () {
                            _self.onchange();
                        }
                    });
				}
			} catch (e) {
                WdatePicker({
                    onpicked: function () {
                        _self.onchange();
                    }
                });
			}
	}
};